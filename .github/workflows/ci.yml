name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Run tests
        env:
          POSTGRES_URL: postgresql://postgres:postgres@localhost:5432/test_db
          SUPABASE_URL: https://test.supabase.co
          SUPABASE_SERVICE_KEY: test_key
          GMAIL_USER: test@example.com
          GMAIL_CLIENT_ID: test_client_id
          GMAIL_CLIENT_SECRET: test_client_secret
          GMAIL_REFRESH_TOKEN: test_refresh_token
          EMAIL_PASSWORD: test_password
          REPORT_EMAIL: test@example.com
          KIXIE_API_KEY: test_api_key
          KIXIE_BASE_URL: https://api.kixie.com
          GOOGLE_SHEETS_CREDENTIALS: '{"type": "service_account"}'
          GOOGLE_SHEETS_TOKEN: '{"access_token": "test"}'
          GOOGLE_SHEETS_ID: test_sheet_id
        run: |
          pytest --cov=app --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
